function Card(b,d,a){this.color=0;this.status=ST_UNSELECTED;this.number=d;this.colorNumber=0;this.cardtype=b;this.selectable=false;this.visible=false;this.deck=null;this.position={x:0,y:0};this.jQueryElt=jQuery("<div/>");this.zIndex=0;this.dblclickTimeout=null;this.dragging=false;this.dragEnabled=false;this.dropEnabled=false;this.oldCssPosition=null;this.width=0;this.height=0;this.deckNum=0;if(typeof a!==undefined){for(var c in a){this[c]=a[c]}}this.init()}Card.prototype.init=function(){this.colorNumber=this.number%13;if(this.colorNumber===0&&(this.cardtype.indexOf("ace")<0)){this.colorNumber=13}switch(this.cardtype){case"club":case"spade":this.color=BLACK;break;case"diamond":case"heart":this.color=RED;break;case"king":case"ace":default:this.color=ANY;break}this.jQueryElt.addClass("card").removeClass("visible");if(this.visible===true){this.jQueryElt.css({cursor:"pointer"});if(this.cardtype.indexOf("ace")>-1){this.jQueryElt.removeClass("card").addClass("pack "+this.cardtype).addClass("visible")}else{if(this.cardtype=="king"){this.jQueryElt.removeClass("card").addClass("pack king").addClass("visible")}else{this.jQueryElt.css("background-position",-(game.spriteXStart+((this.colorNumber-1)*game.xSpace))+"px -"+game.backsY[this.cardtype]+"px")}}}else{this.jQueryElt.css("background-position","-"+game.cardBackX+"px -"+game.backYMisc+"px")}this.jQueryElt.appendTo("#playground");this.width=this.jQueryElt.width();this.height=this.jQueryElt.height();this.position={x1:this.jQueryElt.position().left,y1:this.jQueryElt.position().top,x2:this.jQueryElt.position().left+this.jQueryElt.width(),y2:this.jQueryElt.position().top+this.jQueryElt.height()}};Card.prototype.setDeckNum=function(a){this.deckNum=a};Card.prototype.getDeckNum=function(){return this.deckNum};Card.prototype.setDeck=function(a){this.deck=a};Card.prototype.getDeck=function(){return this.deck};Card.prototype.setCard=function(a){this.color=a.color;this.number=a.number;this.type=a.type};Card.prototype.getCard=function(){return{color:this.color,number:this.number,cardtype:this.cardtype}};Card.prototype.getColorNumber=function(){return this.colorNumber};Card.prototype.getColor=function(){return this.color};Card.prototype.setColor=function(a){this.color=a};Card.prototype.setNumber=function(a){this.number=a};Card.prototype.getNumber=function(){return this.number};Card.prototype.setCardType=function(a){this.cardtype=a};Card.prototype.setVisible=function(a){var b=this;this.visible=a;if(this.visible===true){this.jQueryElt.removeClass("rotate").css({cursor:"pointer"});setTimeout(function(){b.jQueryElt.addClass("rotate")},5);setTimeout(function(){b.jQueryElt.css("background-position",-(game.spriteXStart+((b.colorNumber-1)*game.xSpace))+"px -"+game.backsY[b.cardtype]+"px")},250);this.dropEnabled=this.dragEnabled=true}else{this.jQueryElt.css({"background-position":"-"+game.cardBackX+"px -"+game.backYMisc+"px",cursor:"normal"});this.dropEnabled=this.dragEnabled=false}};Card.prototype.isVisible=function(){return this.visible};Card.prototype.getCardType=function(){return this.cardtype};Card.prototype.setStatus=function(a){this.status=a};Card.prototype.toggleStatus=function(){this.setStatus(this.status===ST_SELECTED?ST_UNSELECTED:ST_SELECTED)};Card.prototype.onClick=function(a){game.clickCard(this)};Card.prototype.onDoubleClick=function(b){Console.log("doubleclick detected");var a=this.deck.getDeckType();if((a===DECK_BOTTOM)||(a===DECK_WASTE)&&(this.deck.getTop()===this)){Console.log("flick possible !");game.addToAce(this)}};Card.prototype.onOver=function(a){Console.log(""+a+"over "+this);if(this.deck!==null){if(this.deck.acceptCard(a)){this.jQueryElt.css("opacity",0.5)}}else{var b=game.bottomDecks[this.deckNum];if(b.acceptCard(a)){this.jQueryElt.css("opacity",0.5)}}};Card.prototype.onOut=function(a){Console.log("out "+this);this.jQueryElt.css("opacity",1)};Card.prototype.onStoppedDragging=function(){Console.log("stopped dropping");this.deck.toggleDragging(this,false)};Card.prototype.onCancelDragging=function(){Console.log("stopped dragging "+this);var a=this.deck;a.toggleDragging(this,false);a.setOldPositionFromCard(this);setTimeout(function(){game.blockedSelection=false},300)};Card.prototype.onStartDragging=function(){Console.log("started dragging "+this);game.blockedSelection=true;this.deck.toggleDragging(this,true)};Card.prototype.onDropping=function(a){Console.log("dropped ",a," over ",this);var b=(this.deck!==null)?this.deck:game.bottomDecks[this.deckNum];if(b.acceptCard(a)){Console.log("accepted !");game.cardPos={x:this.position.x,y:this.position.y};game.swapDeck(a,b);game.selectedCard=null}else{Console.log("refused :"+a+" over "+this);a.onCancelDragging()}};Card.prototype.onDragging=function(a,b){this.deck.setPositionFromCard(this,a,b)};Card.prototype.toggleDragging=function(a){if(a){this.jQueryElt.addClass("dragged");game.maxDepth++;this.depth(game.maxDepth)}else{this.jQueryElt.removeClass("dragged")}};Card.prototype.toggleSelected=function(){this.jQueryElt.toggleClass("selected")};Card.prototype.toggleMoving=function(){this.jQueryElt.removeClass("moving");this.jQueryElt.addClass("moving")};Card.prototype.enableSelection=function(a){if(this.selectable===a||typeof a!=="boolean"){return}this.selectable=a;if(this.selectable===true){this.jQueryElt.bind(EventsManager.EVENT_DOWN,jQuery.proxy(function(b){if(game.blockedSelection===true||(b.button&&(b.button!==0))){return}this.oldCssPosition={left:this.jQueryElt.css("left"),top:this.jQueryElt.css("top")};EventsManager.setDraggingElement(this,(CM.isiOS?b.originalEvent.touches[0]:b))},this))}else{this.jQueryElt.unbind(EventsManager.EVENT_DOWN)}};Card.prototype.enableDragAndDrop=function(a,b){if(a!==null){this.dragEnabled=a}if(b!==null){this.dropEnabled=b}};Card.prototype.toString=function(){return this.colorNumber+" de "+this.cardtype};Card.prototype.setPosition=function(b,f,c,d){var a=this.position,e=this;if(typeof c!=="undefined"){if(b===null){this.jQueryElt.addClass("visible")}else{a.x=c;a.y=d;this.jQueryElt.css({top:f+"px",left:b+"px"});this.jQueryElt.addClass("visible");setTimeout(function(){e.jQueryElt.css({top:d+"px",left:c+"px"})},25)}}else{if(b!=null){a.x=b;a.y=f;this.jQueryElt.addClass("visible").css({top:a.y+"px",left:a.x+"px"})}else{this.jQueryElt.addClass("visible")}}a.x1=a.x;a.y1=a.y;a.x2=a.x1+this.width;a.y2=a.y1+this.height;if(this.oldCssPosition==null){this.oldCssPosition={left:a.x+"px",top:a.y+"px"}}};Card.prototype.saveOldPosition=function(a,b){this.oldCssPosition={left:a+"px",top:b+"px"}};Card.prototype.setOldPosition=function(){var a=this.position;a.x1=a.x=parseInt(this.oldCssPosition.left);a.y1=a.y=parseInt(this.oldCssPosition.top);a.x2=a.x1+this.width;a.y2=a.y1+this.height;this.jQueryElt.css(this.oldCssPosition)};Card.prototype.getPosition=function(){return this.position};Card.prototype.hide=function(){this.jQueryElt.removeClass("visible")};Card.prototype.depth=function(a){if(typeof a==="undefined"||this.zIndex>a){return this.zIndex}else{this.zIndex=a;this.jQueryElt.css("z-index",this.zIndex)}};Card.prototype.getStateInfo=function(){return{number:this.number,cardtype:this.cardtype,visible:this.visible}};