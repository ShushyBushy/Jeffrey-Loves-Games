function isArray(a){return !!(a&&a.constructor==Array)}function Deck(a,b){this.cards=[];this.length=0;this.deckType=a;this.deckNum=typeof b!=="undefined"?b:0;this.topCard=null;this.init()}Deck.prototype.init=function(){var b=this.deckType;if(b>1&&b<6){var c=b-2,a=0;this.topCard=new Card("ace"+c,0,{visible:true});this.topCard.setDeck(this);EventsManager.addDroppable(this.topCard);a=game.acePosX+(c*game.aceSpace);this.topCard.setPosition(a,game.wastePosY)}else{if(b===DECK_BOTTOM){this.topCard=new Card("king",0,{visible:true});this.topCard.setPosition(game.xStart+(this.deckNum*(game.xSpace+game.packCardSpace)),game.mainDeckY);this.topCard.setDeck(this)}}};Deck.prototype.bindTopListeners=function(b){EventsManager.addDroppable(this.topCard);this.topCard.enableDragAndDrop(false,true);this.topCard.onDoubleClick=null;if(b===DECK_BOTTOM){if(game.touchMode===false){this.topCard.onClick=function(){game.cardPos={x:parseInt(this.jQueryElt.css("left")),y:parseInt(this.jQueryElt.css("top"))};game.clickKing(this.deckNum,DECK_BOTTOM);return false}}else{this.topCard.onClick=null}this.topCard.enableSelection(true)}else{var a=this.deckNum;jQuery(this.topCard.jQueryElt).data("deck",this.deckNum);if(game.touchMode===false){jQuery(this.topCard.jQueryElt).bind(EventsManager.EVENT_UP,function(){game.cardPos={x:parseInt(jQuery(this).css("left")),y:parseInt(jQuery(this).css("top"))};game.clickKing(jQuery(this).data("deck"),a+2);return false})}}};Deck.prototype.setDeckNum=function(a){this.deckNum=a};Deck.prototype.getDeckNum=function(){return this.deckNum};Deck.prototype.getDeckType=function(){return this.deckType};Deck.prototype.debug=function(){var a="";var d=0,c=this.length,b=null,e=this.cards;while(d<=(c-1)){b=e[d];a+=b.getNumber()+" ("+b.isVisible()+") ";d++}Console.log("Deck = "+a)};Deck.prototype.push=function(e){var b=this.cards;if(isArray(e)){var d=e.length,a=null;for(var c=0;c<d;c++){a=e[c];a.setDeck(this);b.push(a)}this.length+=e.length}else{e.setDeck(this);b.push(e);this.length++}};Deck.prototype.getTop=function(){var a=this.length;if(a){return this.cards[a-1]}else{return null}};Deck.prototype.toggleSelectionFromCard=function(b){var c=0,d=false,a=0,e=this.cards;a=e.length;while(c<a){if(e[c]===b){d=true;break}c++}if(d===true){while(c<a){e[c].toggleSelected();c++}}};Deck.prototype.toggleDragging=function(c,a){var d=0;found=false,max=this.cards.length,cards=this.cards;while(d<max){if(cards[d]===c){found=true;break}d++}for(var b=d;b<max;b++){cards[b].toggleDragging(a)}};Deck.prototype.setOldPositionFromCard=function(c){var d=0,e=false,a=this.cards.length,f=this.cards;while(d<a){if(f[d]===c){e=true;break}d++}for(var b=(a-1);b>=d;b--){f[b].setOldPosition()}};Deck.prototype.setPositionFromCard=function(b,h,f){var e=0,c=0,l=false,g=this.cards.length,a=this.cards;while(e<g){if(a[e]===b){l=true;break}e++}for(var d=e;d<g;d++){a[d].setPosition(h,f+(game.visibleCardSpace*c++))}};Deck.prototype.toggleMovingFromCard=function(b){var c=0,d=false,a=this.cards.length,e=this.cards;while(c<a){if(e[c]===b){d=true;break}c++}if(d===true){while(c<a){e[c].toggleMoving();c++}}};Deck.prototype.popMultiple=function(d){var b=0;var c=[],a=this.length;if(a){if(d>a){d=a}for(b=0;b<d;b++){c.push(this.pop())}return c}else{return null}};Deck.prototype.pop=function(){if(this.length){this.length--;this.cards[this.length].setDeck(null);return this.cards.pop()}else{return null}};Deck.prototype.reverseFirstInvisible=function(){var c=this.cards;for(var b=(c.length-1);b>=0;b++){var a=c[b];if(a.isVisible()==false){a.setVisible(true);break}}};Deck.prototype.setPossibleSelections=function(){var c=this.length-1,b=c,a=null,d=this.cards;while(b>=0&&d[b].isVisible()){a=d[b];a.enableSelection(true);a.enableDragAndDrop(true,false);b--}if(this.length&&d[c].isVisible()){d[c].enableDragAndDrop(true,true)}if(this.length>0&&this.getTop().isVisible()===false){d[c].enableSelection(true)}return this};Deck.prototype.popVisible=function(a){var d=this.cards,b=d.length-1;var c=new Array();while((b>=0)&&(d[b].isVisible()==true)){c.push(this.pop());b--}if(d.length&&a==true){d[this.length-1].setVisible(true)}return c.reverse()};Deck.prototype.popVisibleUpTo=function(b,a){var f=this.cards,c=f.length-1;var d=[];var e=false;while((c>=0)&&(f[c].isVisible()==true)&&(e===false)){if(f[c]===b){e=true}d.push(this.pop());c--}if(f.length&&a==true&&(f[this.length-1].isVisible()===false)){f[this.length-1].setVisible(true)}return d.reverse()};Deck.prototype.popToBack=function(){if(this.length<=1){return}var c=this.cards,b=c.pop(),a=c.length;b.setVisible(false);b.hide();if(a){c[a-1].setVisible(true);c[a-1].enableSelection(true);c.splice(0,0,b)}};Deck.prototype.isTop=function(a){var c=this.cards,b=c.length;return((b>0)&&(c[b-1]===a))};Deck.prototype.acceptCard=function(b){var a=this.deckType,c=this.getTop();if(a==DECK_BOTTOM){if(this.length===0){if(b.getColorNumber()==13){return true}}else{if(b.getColor()===c.getColor()){return false}else{return((c.getColorNumber()-b.getColorNumber())===1)}}}else{if(b===b.getDeck().getTop()){if(a==DECK_ACE_HEART){colorNum=(c!==null)?c.getColorNumber():0;if(b.getColorNumber()==0){return(b.getCardType()==="ace0")}else{return(b.getCardType()==="heart"&&((b.getColorNumber()-colorNum)==1))}}else{if(a==DECK_ACE_DIAMOND){colorNum=(c!==null)?c.getColorNumber():0;if(b.getColorNumber()==0){return(b.getCardType()==="ace1")}else{return(b.getCardType()==="diamond"&&((b.getColorNumber()-colorNum)==1))}}else{if(a==DECK_ACE_SPADE){colorNum=(c!==null)?c.getColorNumber():0;if(b.getColorNumber()==0){return(b.getCardType()==="ace2")}else{return(b.getCardType()==="spade"&&((b.getColorNumber()-colorNum)==1))}}else{if(a==DECK_ACE_CLUB){colorNum=(c!==null)?c.getColorNumber():0;if(b.getColorNumber()==0){return(b.getCardType()==="ace3")}else{return(b.getCardType()==="club"&&((b.getColorNumber()-colorNum)==1))}}}}}}else{if(a==DECK_PACK){Console.log("warning: adding card to pack deck ?!");return false}}}};Deck.prototype.getCardsFromDeck=function(a){card=a.pop();while(card!==null){card.hide();this.push(card);card=a.pop()}};Deck.prototype.getCardAtPos=function(a){if((a>=this.cards.length)||(a<0)){return null}else{return this.cards[a]}};Deck.prototype.showCards=function(b,e){var c=0,d=this.cards,a=this.length;while(c<a){d[c].depth(c+2);d[c].setPosition(b,e);c++}};Deck.prototype.toString=function(){return this.deckType};Deck.prototype.setCardsVisibility=function(d){var c=this.cards;for(var b=0,a=this.length;b<a;b++){c[b].setVisible(d)}};Deck.prototype.getCardStates=function(){var a=[],d=this.cards,c=d.length;for(var b=0;b<c;b++){a.push(d[b].getStateInfo())}return a};Deck.prototype.fillWith=function(d){var c=d.length,a=null;for(var b=0;b<c;b++){a=new Card(d[b].cardtype,d[b].number);a.setVisible(d[b].visible);EventsManager.addDroppable(a);EventsManager.addDraggable(a);this.push(a)}return this};